buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:6.5.0.1'
    }
}

plugins {
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'java-library'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.10'
    implementation 'ch.qos.logback:logback-core:1.2.10'
    implementation 'joda-time:joda-time:2.10.13'
    implementation 'org.slf4j:slf4j-api:1.7.35'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.15.0'

    testImplementation 'junit:junit:4.13.2'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "sonarqube-pr-dep"
        property "sonar.projectName", "sonarqube-pr-dep"
        property "sonar.scm.provider", "git"
        property 'sonar.dependencyCheck.reportPath', 'build/reports/dependency-check-report.xml'
        property 'sonar.dependencyCheck.xmlReportPath', 'build/reports/dependency-check-report.xml'
        property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
        property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
        property 'sonar.qualitygate.wait', 'true'
        property 'sonar.coverage.jacoco.xmlReportPaths', '${project.buildDir}/reports/jacoco.xml'
        properties['sonar.sources'] += "build.gradle"
        property 'sonar.login', System.properties['sonarconfig.login']

        property "sonar.pullrequest.key", "check-my-pr"
        property "sonar.pullrequest.branch", "check-my-pr"
        property "sonar.pullrequest.base", "main"
    }
}

jacocoTestReport {
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
    dependsOn test
    reports {
        html.required = false
        xml.required = true
    }
}

dependencyCheck {
    failBuildOnCVSS = 11
    dependencyCheck {
        format = 'ALL'
    }
    analyzers {
        nodeAudit {
            skipDevDependencies = true
        }
        nodeEnabled = false
        retirejs {
            enabled = false
        }
        assemblyEnabled = false
    }
    failOnError = true
}

